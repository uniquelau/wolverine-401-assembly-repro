// <auto-generated/>
#pragma warning disable
using Microsoft.AspNetCore.Routing;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Options;
using System;
using System.Linq;
using Wolverine.EntityFrameworkCore.Internals;
using Wolverine.Http;
using Wolverine.Runtime;

namespace Internal.Generated.WolverineHandlers
{
    // START: POST_ex_users
    [global::System.CodeDom.Compiler.GeneratedCode("JasperFx", "1.0.0")]
    public sealed class POST_ex_users : Wolverine.Http.HttpHandler
    {
        private readonly Wolverine.Http.WolverineHttpOptions _wolverineHttpOptions;
        private readonly Wolverine.EntityFrameworkCore.Internals.IDbContextBuilder<WolverineTest.Web.Data.WolverineTestContext> _dbContextBuilder;
        private readonly Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.IdentityOptions> _options1;
        private readonly Wolverine.Runtime.IWolverineRuntime _wolverineRuntime;
        private readonly Microsoft.Extensions.Logging.ILogger<Microsoft.AspNetCore.Identity.UserManager<WolverineTest.Web.Data.DbUser>> _logger;
        private readonly Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.PasswordHasherOptions> _options2;

        public POST_ex_users(Wolverine.Http.WolverineHttpOptions wolverineHttpOptions, Wolverine.EntityFrameworkCore.Internals.IDbContextBuilder<WolverineTest.Web.Data.WolverineTestContext> dbContextBuilder, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.IdentityOptions> __options1, Wolverine.Runtime.IWolverineRuntime wolverineRuntime, Microsoft.Extensions.Logging.ILogger<Microsoft.AspNetCore.Identity.UserManager<WolverineTest.Web.Data.DbUser>> logger, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.PasswordHasherOptions> __options2) : base(wolverineHttpOptions)
        {
            _wolverineHttpOptions = wolverineHttpOptions;
            _dbContextBuilder = dbContextBuilder;
            _options1 = __options1;
            _wolverineRuntime = wolverineRuntime;
            _logger = logger;
            _options2 = __options2;
        }



        public override async System.Threading.Tasks.Task Handle(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {

            // Tenant Id detection
            // 1. Tenant Id is request header 'tenantId'
            // 2. Wolverine.Http.Runtime.MultiTenancy.FallbackDefault
            var tenantId = await TryDetectTenantId(httpContext);
            var messageContext = new Wolverine.Runtime.MessageContext(_wolverineRuntime);
            messageContext.TenantId = tenantId;
            await using var wolverineTestContext = await _dbContextBuilder.BuildAndEnrollAsync(messageContext, httpContext.RequestAborted);
            var identityErrorDescriber = new Microsoft.AspNetCore.Identity.IdentityErrorDescriber();
            using var userStore = new Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<WolverineTest.Web.Data.DbUser, Microsoft.AspNetCore.Identity.IdentityRole, WolverineTest.Web.Data.WolverineTestContext, string, Microsoft.AspNetCore.Identity.IdentityUserClaim<string>, Microsoft.AspNetCore.Identity.IdentityUserRole<string>, Microsoft.AspNetCore.Identity.IdentityUserLogin<string>, Microsoft.AspNetCore.Identity.IdentityUserToken<string>, Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>>(wolverineTestContext, identityErrorDescriber);
            var passwordHasher = new Microsoft.AspNetCore.Identity.PasswordHasher<WolverineTest.Web.Data.DbUser>(_options2);
            var userValidator = new Microsoft.AspNetCore.Identity.UserValidator<WolverineTest.Web.Data.DbUser>(identityErrorDescriber);
            System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IUserValidator<WolverineTest.Web.Data.DbUser>> userValidatorIEnumerable = new Microsoft.AspNetCore.Identity.IUserValidator<WolverineTest.Web.Data.DbUser>[]{userValidator};
            var passwordValidator = new Microsoft.AspNetCore.Identity.PasswordValidator<WolverineTest.Web.Data.DbUser>(identityErrorDescriber);
            System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IPasswordValidator<WolverineTest.Web.Data.DbUser>> passwordValidatorIEnumerable = new Microsoft.AspNetCore.Identity.IPasswordValidator<WolverineTest.Web.Data.DbUser>[]{passwordValidator};
            var upperInvariantLookupNormalizer = new Microsoft.AspNetCore.Identity.UpperInvariantLookupNormalizer();
            using var userManager = new Microsoft.AspNetCore.Identity.UserManager<WolverineTest.Web.Data.DbUser>(userStore, _options1, passwordHasher, userValidatorIEnumerable, passwordValidatorIEnumerable, upperInvariantLookupNormalizer, identityErrorDescriber, httpContext.RequestServices, _logger);
            Wolverine.Http.Runtime.RequestIdMiddleware.Apply(httpContext, messageContext);
            // Reading the request body via JSON deserialization
            var (exCreateUserRequest, jsonContinue) = await ReadJsonAsync<WolverineTest.Web.Handlers.Explict.ExCreateUserRequest>(httpContext);
            if (jsonContinue == Wolverine.HandlerContinuation.Stop) return;
            var exCreateUserCommand = WolverineTest.Web.Handlers.Explict.ExCreateUserEndpoint.Before(exCreateUserRequest, userManager);
            
            // The actual HTTP request handler execution
            var exCreateUserResponse_response = await WolverineTest.Web.Handlers.Explict.ExCreateUserEndpoint.Handle(exCreateUserRequest, exCreateUserCommand, messageContext).ConfigureAwait(false);

            // Writing the response body to JSON because this was the first 'return variable' in the method signature
            await WriteJsonAsync(httpContext, exCreateUserResponse_response);
            
            // Have to flush outgoing messages just in case Marten did nothing because of https://github.com/JasperFx/wolverine/issues/536
            await messageContext.FlushOutgoingMessagesAsync().ConfigureAwait(false);

        }

    }

    // END: POST_ex_users
    
    
}

